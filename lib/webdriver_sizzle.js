// Generated by CoffeeScript 1.7.1
var Deferred, WebElement, fs, path, selenium;

path = require('path');

fs = require('fs');

selenium = require('selenium-webdriver');

Deferred = selenium.promise.Deferred;

WebElement = selenium.WebElement;

module.exports = function(driver) {
  var all, checkSizzleExists, getElement, injectSizzle, one, sizzleCode;
  sizzleCode = fs.readFileSync(path.join(__dirname, '../lib', 'sizzle.min.js'));
  checkSizzleExists = function() {
    console.log('- check sizzle');
    return driver.executeScript(function() {
      return window.Sizzle != null;
    });
  };
  injectSizzle = function() {
    var promise;
    console.log('- injectSizzle');
    sizzleCode = fs.readFileSync(path.join(__dirname, '../lib', 'sizzle.min.js'));
    promise = driver.executeScript("var module = {exports: {}};\n" + sizzleCode + "\nwindow.Sizzle = module.exports;");
    return promise;
  };
  getElement = function(selector) {
    var elementPromise;
    console.log('- getElement', selector);
    elementPromise = driver.findElement(selenium.By.js("try {\n  var selector = " + (JSON.stringify(selector)) + ";\n  console.log('hello', selector);\n  console.log(\"[client] has sizzle?\", !!window.Sizzle);\n  console.log(\"[client] looking for '" + selector + "'\");\n  var els = window.Sizzle(selector) || [];\n  console.log(\"[client] els?\", els);\n  return els[0];\n} catch (err) {\n  console.error(\"Failed\", err, els);\n}"));
    console.log('getElement promise?', elementPromise);
    return elementPromise;
  };
  one = function(selector) {
    var d;
    console.log('- getting element zzz', selector);
    d = new Deferred;
    checkSizzleExists().then(function(sizzleExists) {
      console.log('-- sizzleExists?', sizzleExists);
      if (!sizzleExists) {
        console.log('- injecting sizzle');
        return injectSizzle();
      }
    }).then(function() {
      var elPromise;
      console.log('- finally getting el');
      elPromise = getElement(selector);
      return d.fulfill(elPromise);
    });
    return new WebElement(driver, d.promise);
  };
  all = function(selector) {
    return driver.findElements(selenium.By.js("var module = {exports: {}};\n" + sizzleCode + "\nvar Sizzle = module.exports;\nreturn (Sizzle(" + (JSON.stringify(selector)) + ") || []);"));
  };
  one.all = all;
  return one;
};
